name: release


on:
  push:
    tags:
    - 'v*'


jobs:


  release:
    name: Create release
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: "0"

    - name: List changes
      id: changes
      run: |
        git fetch --tags --force
        CHANGES="$(git log --oneline $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:'- %h %s' --no-merges)"
        CHANGES="${CHANGES//'%'/'%25'}"
        CHANGES="${CHANGES//$'\n'/'%0A'}"
        CHANGES="${CHANGES//$'\r'/'%0D'}"
        echo "::set-output name=changes::${CHANGES}"

    - name: Create release
      id: release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        body: |
          Changes in this release:
          ${{ steps.changes.outputs.changes }}
        token: ${{ secrets.GITHUB_TOKEN }}

  binaries:
    name: Create binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm, arm64]
        exclude:
        - goos: windows
          goarch: "386"
        - goos: windows
          goarch: arm
        - goos: darwin
          goarch: "386"
        - goos: darwin
          goarch: arm64
    needs: release

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build and release artifacts
      uses: wangyoucao577/go-release-action@v1.17
      env:
        GOARM: 7
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: 1.16
        sha256sum: true
        extra_files: LICENSE README.md

  container:
    name: Create Docker containers
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU for multiarch build
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1.3.0

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.REGISTRY_PAT }}

    - name: Build and push containers
      uses: docker/build-push-action@v2
      with:
        push: true
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}
        labels: |
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
